<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flynet.bas.dao.UserDao">
	<resultMap id="User" type="com.flynet.bas.model.User">
		<result column="id" property="id" /><!-- ID -->
		<result column="login_name" property="loginName" /><!-- 登录名 -->
		<result column="password" property="password" /><!-- 密码 -->
		<result column="type" property="type" /><!-- 类型 -->
	</resultMap>

	<!-- 获取用户列表 -->
	<select id="getList" resultMap="User" parameterType="map">
		select
			users.id, 
			users.login_name, 
			users.password,
			users.type
		from users
		<if test="projectId != null">
			join work_plan_user wpu on wpu.user_id = users.id 
			join work_plan wp on wp.project_id = #{projectId} and wpu.work_plan_id = wp.id
		</if>
		where 1 = 1
		<if test="loginName != null">
			and users.login_name = #{loginName}
		</if>
		<if test="type != null">
			and users.type = #{type} 
		</if>
	</select>

	<!-- 获取用户 -->
	<select id="get" resultMap="User" parameterType="string">
		select 
			id,
			login_name, 
			password,
			type
		from users
		where id = #{id}
	</select>

	<!-- 获取用户 -->
	<select id="getByLoginName" resultMap="User" parameterType="string">
		select 
			id, 
			login_name, 
			password, 
			type
		from users
		where lower(login_name) = lower(#{loginName})
	</select>

	<!-- 添加用户 -->
	<insert id="add" parameterType="User">
		insert into users(
		<trim suffixOverrides=",">
			id, 
			login_name, 
			password, 
			type,
		</trim>
		) values (
		<trim suffixOverrides=",">
			#{id}, 
			#{loginName}, 
			#{password}, 
			#{type},
		</trim>
		)
	</insert>

	<!-- 更新用户数据 -->
	<update id="update" parameterType="User">
		update users
		<set>
			<trim suffixOverrides=",">
				<if test="loginName != null">
					login_name = #{loginName},
				</if>
				<if test="type != null">
					type = #{type},
				</if>
				<if test="password != null">
					password = #{password},
				</if>
			</trim>
		</set>
		where id = #{id}
	</update>

	<update id="modifyPassword" parameterType="User">
		update users
		<set>
			<trim suffixOverrides=",">
				<if test="password != null">
					password = #{password},
				</if>
			</trim>
		</set>
		where id = #{id}
	</update>

	<delete id="delete" parameterType="string">
		delete from users 
		where id = #{id}
	</delete>

</mapper>